'use strict';

module.exports = function(grunt) {
  require('load-grunt-tasks')(grunt);
  grunt.loadNpmTasks('grunt-mocha-test');
  grunt.loadNpmTasks('grunt-mocha-istanbul');
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-protractor-runner');

  grunt.initConfig({
    // Get rid of stuff generated by builds
    clean: ['coverage/', 'xunit.xml', 'screenshot*.png'],

    eslint: {
      options: { maxWarnings: 0 }, // fail for any warning
      lint:    ['.'],  // Use directories instead of wildcards (like *.js) or you will get a warning for every ignored file!
    },

    mocha_istanbul: {
      // For mortals
      coverage: {
        src:     'test', // the folder, not the files
        options: {
          reportFormats:     ['html'],
          coverageFolder:    'coverage',
          recursive:         true,
          quiet:             false,
          clearRequireCache: true,           // Optionally clear the require cache before running tests (defaults to false)
          reporter:          'spec',
          slow:              1,                           // Report timings on every test
          timeout:           10000,                    // Timeout a bit higher for slow build machine
          mochaOptions:      ['--retries', '3'],  // Retry failed tests up to 3 times
        },
      },

      // For automated CI envs. This will run the tests and coverage at the same time
      // and will output the test results in J/XUnit xml format and the coverage in cobertura
      ciCoverage: {
        src:     'test', // the folder, not the files
        options: {
          reportFormats:     ['cobertura', 'html'],
          coverageFolder:    'coverage',
          recursive:         true,
          quiet:             false,
          clearRequireCache: true,           // Optionally clear the require cache before running tests (defaults to false)
          reporter:          'xunit-file',
          slow:              1,                           // Report timings on every test
          timeout:           30000,                    // Timeout a bit higher for slow build machine
          mochaOptions:      ['--retries', '3'],  // Retry failed tests up to 3 times
        },
      },
    },

    // Configure a mochaTest task
    mochaTest:  {
      test: {
        options: {
          reporter:          'spec',
          bail:              false,
          quiet:             false,
          clearRequireCache: false,
          retries:           3,
          includeStack: true
        },
        src:     ['featureTesting/test/**/*.js'],
      },
    },
    protractor: {
      main: {
        configFile: 'protractor.conf.js',
        keepAlive:  true, // If false, the grunt process stops when the test fails.
        noColor:    false // If true, protractor will not use colors in its output.
      }
    }
  });

  grunt.registerTask('todo', function() { // Add checks for to-do comments and then run linter
    grunt.config.merge({
      eslint: {
        options: {
          rules: {
            'no-warning-comments': [1, { terms: ['todo', 'fixme', 'xxx'], location: 'anywhere' }],
          },
        },
      },
    });
    grunt.task.run('eslint');
  });
  grunt.registerTask('lint', ['eslint']);
  grunt.registerTask('coverage', ['mocha_istanbul:coverage']);
  grunt.registerTask('ci', ['clean', 'eslint', 'mocha_istanbul:ciCoverage']);
  grunt.registerTask('test', ['lint', 'coverage']);
  grunt.registerTask('featureTestOld', ['clean', 'lint', 'mochaTest:test']);
  grunt.registerTask('featureTest', ['lint', 'protractor:main']);
  grunt.registerTask('ciFeatureTest', ['protractor:ci']);
  grunt.registerTask('default', ['test']);
};
